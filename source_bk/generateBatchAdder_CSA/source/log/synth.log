
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 UNKNOWN, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Executing script file `csa_8bit.ys' --

1. Executing Liberty frontend.
Imported 39 cell types from liberty file.

2. Executing Verilog-2005 frontend: /hdd/xuenong/Adder_Classification/source/generateBatchAdder_CSA/source/csa_8bit.v
Parsing Verilog input from `/hdd/xuenong/Adder_Classification/source/generateBatchAdder_CSA/source/csa_8bit.v' to AST representation.
Generating RTLIL representation for module `\CSA4'.
Generating RTLIL representation for module `\CSA3'.
Generating RTLIL representation for module `\CSA2'.
Generating RTLIL representation for module `\CSA1'.
Generating RTLIL representation for module `\RCA4'.
Generating RTLIL representation for module `\full_adder'.
Generating RTLIL representation for module `\MUX2to1_w1'.
Generating RTLIL representation for module `\MUX2to1_w4'.
Generating RTLIL representation for module `\MUX2to1_w3'.
Generating RTLIL representation for module `\MUX2to1_w2'.
Generating RTLIL representation for module `\csa_8bit'.
Successfully finished Verilog frontend.

3. Executing HIERARCHY pass (managing design hierarchy).
ERROR: Module `RCA4' referenced in module `csa_8bit' in cell `rca_inst' does not have a port named 'i_add_term2'.
Errors detected in verilog source, need to be corrected.
Synthesis flow stopped due to error condition.
